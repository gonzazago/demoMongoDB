27-12-2017 12:31:47.588 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 5648 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 12:31:47.659 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 12:31:47.970 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Wed Dec 27 12:31:47 ART 2017]; root of context hierarchy
27-12-2017 12:31:47.993 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 12:31:52.336 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:31:52.940 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.util.concurrent.ExecutionException,java.lang.InterruptedException
27-12-2017 12:31:52.959 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 12:31:52.960 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 12:31:52.961 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:31:52.972 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:31:52.973 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 12:31:52.977 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 12:31:53.000 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 12:31:53.010 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 12:31:53.011 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:31:53.012 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:31:53.132 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:31:53.141 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:31:53.932 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:31:54.089 [cluster-ClusterId{value='5a43bce9180b08161013ebca', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:127}] to localhost:27017
27-12-2017 12:31:54.105 [cluster-ClusterId{value='5a43bce9180b08161013ebca', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1191470}
27-12-2017 12:31:54.795 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:31:54.797 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:31:54.798 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 12:31:54.861 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:31:54.930 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Wed Dec 27 12:31:47 ART 2017]; root of context hierarchy
27-12-2017 12:31:57.578 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:31:57.693 [cluster-ClusterId{value='5a43bced180b08161013ebcb', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:128}] to localhost:27017
27-12-2017 12:31:57.712 [cluster-ClusterId{value='5a43bced180b08161013ebcb', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5749290}
27-12-2017 12:31:59.881 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:129}] to localhost:27017
27-12-2017 12:32:00.217 [Thread-37] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:130}] to localhost:27017
27-12-2017 12:32:05.389 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 12:32:06.802 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 12:32:07.853 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 12:32:07.869 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 12:32:07.943 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 21.648 seconds (JVM running for 24.22)
27-12-2017 12:33:15.225 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 12:34:37.252 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 12:34:37.684 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 12:36:33.444 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 3476 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 12:36:33.455 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 12:36:33.736 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@24a763a5: startup date [Wed Dec 27 12:36:33 ART 2017]; root of context hierarchy
27-12-2017 12:36:33.900 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 12:36:38.246 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:36:39.729 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.util.concurrent.ExecutionException,java.lang.InterruptedException
27-12-2017 12:36:39.765 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:36:39.777 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 12:36:39.789 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 12:36:39.790 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:36:39.792 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 12:36:39.793 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 12:36:39.808 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 12:36:39.809 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 12:36:39.810 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:36:39.812 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:36:40.000 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:36:40.001 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:36:41.057 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:36:41.253 [cluster-ClusterId{value='5a43be09180b080d94004875', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:131}] to localhost:27017
27-12-2017 12:36:41.302 [cluster-ClusterId{value='5a43be09180b080d94004875', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=982007}
27-12-2017 12:36:42.288 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:36:42.298 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:36:42.309 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 12:36:42.383 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:36:42.466 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@24a763a5: startup date [Wed Dec 27 12:36:33 ART 2017]; root of context hierarchy
27-12-2017 12:36:45.397 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:36:45.514 [cluster-ClusterId{value='5a43be0d180b080d94004876', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:132}] to localhost:27017
27-12-2017 12:36:45.531 [cluster-ClusterId{value='5a43be0d180b080d94004876', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5500639}
27-12-2017 12:36:47.788 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:133}] to localhost:27017
27-12-2017 12:36:48.200 [Thread-39] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:134}] to localhost:27017
27-12-2017 12:36:54.064 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 12:36:55.570 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 12:36:56.834 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 12:36:56.845 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 12:36:56.927 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 24.975 seconds (JVM running for 27.356)
27-12-2017 12:37:32.948 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 12:39:03.820 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 12:39:04.260 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 12:52:38.406 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 8748 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 12:52:38.417 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 12:52:38.608 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@7683b280: startup date [Wed Dec 27 12:52:38 ART 2017]; root of context hierarchy
27-12-2017 12:52:38.733 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 12:52:41.366 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:52:41.828 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.util.concurrent.ExecutionException,java.lang.InterruptedException
27-12-2017 12:52:41.843 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 12:52:41.844 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:52:41.854 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 12:52:41.855 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 12:52:41.856 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 12:52:41.857 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 12:52:41.868 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 12:52:41.869 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 12:52:41.869 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:52:41.870 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 12:52:41.952 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:52:41.952 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 12:52:42.531 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:52:42.600 [cluster-ClusterId{value='5a43c1ca180b08222c968255', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:135}] to localhost:27017
27-12-2017 12:52:42.604 [cluster-ClusterId{value='5a43c1ca180b08222c968255', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=967079}
27-12-2017 12:52:43.066 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:52:43.092 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 12:52:43.094 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 12:52:43.167 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 12:52:43.205 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@7683b280: startup date [Wed Dec 27 12:52:38 ART 2017]; root of context hierarchy
27-12-2017 12:52:43.795 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 12:52:43.819 [cluster-ClusterId{value='5a43c1cb180b08222c968256', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:136}] to localhost:27017
27-12-2017 12:52:43.820 [cluster-ClusterId{value='5a43c1cb180b08222c968256', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1035189}
27-12-2017 12:52:44.039 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:137}] to localhost:27017
27-12-2017 12:52:44.111 [Thread-29] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:138}] to localhost:27017
27-12-2017 12:52:44.551 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 12:52:44.659 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 12:52:44.967 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 12:52:44.976 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 12:52:44.983 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.532 seconds (JVM running for 9.484)
27-12-2017 12:52:50.104 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 12:52:51.712 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 12:52:51.765 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:03:25.907 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 5480 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:03:25.953 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:03:26.082 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6fe858ad: startup date [Wed Dec 27 13:03:26 ART 2017]; root of context hierarchy
27-12-2017 13:03:26.263 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:03:30.558 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:03:32.159 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.util.concurrent.ExecutionException,java.lang.InterruptedException
27-12-2017 13:03:32.207 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:03:32.228 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:03:32.247 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:03:32.248 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:03:32.251 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:03:32.252 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:03:32.272 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:03:32.275 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:03:32.276 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:03:32.278 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:03:32.524 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:03:32.525 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:03:33.483 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:03:33.659 [cluster-ClusterId{value='5a43c455180b081568e00560', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:139}] to localhost:27017
27-12-2017 13:03:33.676 [cluster-ClusterId{value='5a43c455180b081568e00560', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1033790}
27-12-2017 13:03:34.470 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:03:34.504 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:03:34.514 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:03:34.591 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:03:34.716 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6fe858ad: startup date [Wed Dec 27 13:03:26 ART 2017]; root of context hierarchy
27-12-2017 13:03:37.519 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:03:37.644 [cluster-ClusterId{value='5a43c459180b081568e00561', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:140}] to localhost:27017
27-12-2017 13:03:37.663 [cluster-ClusterId{value='5a43c459180b081568e00561', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5898107}
27-12-2017 13:03:39.825 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:141}] to localhost:27017
27-12-2017 13:03:40.186 [Thread-36] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:142}] to localhost:27017
27-12-2017 13:03:45.502 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:03:46.987 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:03:48.158 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:03:48.170 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:03:48.246 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 23.716 seconds (JVM running for 26.162)
27-12-2017 13:04:12.141 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:05:25.432 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:05:25.882 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:06:45.474 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9148 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:06:45.487 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:06:45.830 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3473c8a2: startup date [Wed Dec 27 13:06:45 ART 2017]; root of context hierarchy
27-12-2017 13:06:46.078 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:06:49.936 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:06:51.409 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:06:51.447 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:06:51.458 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:06:51.470 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:06:51.472 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:06:51.473 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:06:51.475 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:06:51.487 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:06:51.488 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:06:51.490 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:06:51.491 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:06:51.665 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:06:51.666 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:06:52.667 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:06:52.858 [cluster-ClusterId{value='5a43c51c180b0823bce01f2d', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:143}] to localhost:27017
27-12-2017 13:06:52.875 [cluster-ClusterId{value='5a43c51c180b0823bce01f2d', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=967546}
27-12-2017 13:06:53.670 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:06:53.682 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:06:53.692 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:06:53.776 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:06:53.859 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@3473c8a2: startup date [Wed Dec 27 13:06:45 ART 2017]; root of context hierarchy
27-12-2017 13:06:56.738 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:06:56.854 [cluster-ClusterId{value='5a43c520180b0823bce01f2e', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:144}] to localhost:27017
27-12-2017 13:06:56.871 [cluster-ClusterId{value='5a43c520180b0823bce01f2e', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5194608}
27-12-2017 13:06:59.026 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:145}] to localhost:27017
27-12-2017 13:06:59.424 [Thread-36] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:146}] to localhost:27017
27-12-2017 13:07:05.509 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:07:07.228 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:07:08.511 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:07:08.520 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:07:08.598 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 24.421 seconds (JVM running for 26.946)
27-12-2017 13:07:32.872 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:07:42.366 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:07:48.612 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.Exception: I/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:53)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:09:48.652 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 96 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:09:48.667 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:09:48.828 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@42f97370: startup date [Wed Dec 27 13:09:48 ART 2017]; root of context hierarchy
27-12-2017 13:09:49.024 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:09:51.959 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:09:53.258 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:09:53.289 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:09:53.298 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:09:53.308 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:09:53.309 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:09:53.310 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:09:53.311 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:09:53.322 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:09:53.323 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:09:53.324 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:09:53.325 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:09:53.477 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:09:53.478 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:09:54.442 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:09:54.595 [cluster-ClusterId{value='5a43c5d2180b080060a000bc', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:150}] to localhost:27017
27-12-2017 13:09:54.611 [cluster-ClusterId{value='5a43c5d2180b080060a000bc', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1094903}
27-12-2017 13:09:55.365 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:09:55.367 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:09:55.370 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:09:55.452 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:09:55.520 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@42f97370: startup date [Wed Dec 27 13:09:48 ART 2017]; root of context hierarchy
27-12-2017 13:09:58.066 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:09:58.166 [cluster-ClusterId{value='5a43c5d6180b080060a000bd', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:151}] to localhost:27017
27-12-2017 13:09:58.182 [cluster-ClusterId{value='5a43c5d6180b080060a000bd', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=3915432}
27-12-2017 13:09:59.982 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:152}] to localhost:27017
27-12-2017 13:10:00.303 [Thread-33] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:153}] to localhost:27017
27-12-2017 13:10:04.814 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:10:06.064 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:10:07.063 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:10:07.073 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:10:07.143 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 19.744 seconds (JVM running for 21.635)
27-12-2017 13:10:49.578 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:13:58.881 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:13:59.252 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.Exception: I/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:56)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:18:41.067 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 10164 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:18:41.082 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:18:41.274 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5fb0943: startup date [Wed Dec 27 13:18:41 ART 2017]; root of context hierarchy
27-12-2017 13:18:41.457 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:18:44.788 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:18:45.956 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:18:45.986 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:18:45.996 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:18:46.006 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:18:46.006 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:18:46.008 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:18:46.009 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:18:46.021 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:18:46.022 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:18:46.023 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:18:46.024 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:18:46.169 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:18:46.170 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:18:47.050 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:18:47.207 [cluster-ClusterId{value='5a43c7e7180b0827b4895f70', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:154}] to localhost:27017
27-12-2017 13:18:47.222 [cluster-ClusterId{value='5a43c7e7180b0827b4895f70', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=820128}
27-12-2017 13:18:47.931 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:18:47.933 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:18:47.936 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:18:48.014 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:18:48.088 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5fb0943: startup date [Wed Dec 27 13:18:41 ART 2017]; root of context hierarchy
27-12-2017 13:18:50.637 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:18:50.749 [cluster-ClusterId{value='5a43c7ea180b0827b4895f71', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:155}] to localhost:27017
27-12-2017 13:18:50.766 [cluster-ClusterId{value='5a43c7ea180b0827b4895f71', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5615868}
27-12-2017 13:18:52.693 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:156}] to localhost:27017
27-12-2017 13:18:53.030 [Thread-34] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:157}] to localhost:27017
27-12-2017 13:18:57.987 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:18:59.316 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:19:00.346 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:19:00.355 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:19:00.426 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 20.67 seconds (JVM running for 22.744)
27-12-2017 13:21:18.329 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:21:34.414 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:21:44.496 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:58)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:22:41.628 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:23:31.732 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:23:31.891 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:58)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:31:22.083 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 4456 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:31:22.094 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:31:22.232 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1b9bc21a: startup date [Wed Dec 27 13:31:22 ART 2017]; root of context hierarchy
27-12-2017 13:31:22.354 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:31:26.020 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:31:27.232 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:31:27.263 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:31:27.273 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:31:27.283 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:31:27.284 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:31:27.285 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:31:27.286 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:31:27.299 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:31:27.300 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:31:27.301 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:31:27.302 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:31:27.443 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:31:27.443 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:31:28.405 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:31:28.636 [cluster-ClusterId{value='5a43cae0180b0811689b3bdc', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:158}] to localhost:27017
27-12-2017 13:31:28.654 [cluster-ClusterId{value='5a43cae0180b0811689b3bdc', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=985273}
27-12-2017 13:31:29.380 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:31:29.382 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:31:29.384 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:31:29.474 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:31:29.554 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@1b9bc21a: startup date [Wed Dec 27 13:31:22 ART 2017]; root of context hierarchy
27-12-2017 13:31:31.313 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:31:31.440 [cluster-ClusterId{value='5a43cae3180b0811689b3bdd', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:159}] to localhost:27017
27-12-2017 13:31:31.460 [cluster-ClusterId{value='5a43cae3180b0811689b3bdd', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=5637794}
27-12-2017 13:31:33.616 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:160}] to localhost:27017
27-12-2017 13:31:33.960 [Thread-35] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:161}] to localhost:27017
27-12-2017 13:31:40.653 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:31:41.992 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:31:43.067 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:31:43.078 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:31:43.158 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 22.075 seconds (JVM running for 24.192)
27-12-2017 13:32:05.267 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:32:37.940 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
27-12-2017 13:32:41.321 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:66)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

27-12-2017 13:33:45.457 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 6100 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:33:45.468 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:33:45.615 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@219a12ef: startup date [Wed Dec 27 13:33:45 ART 2017]; root of context hierarchy
27-12-2017 13:33:45.689 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:33:49.026 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:33:50.192 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:33:50.222 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:33:50.232 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:33:50.242 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:33:50.243 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:33:50.244 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:33:50.245 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:33:50.256 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:33:50.257 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:33:50.258 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:33:50.259 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:33:50.388 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:33:50.389 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:33:51.220 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:33:51.397 [cluster-ClusterId{value='5a43cb6f180b0817d4848200', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:162}] to localhost:27017
27-12-2017 13:33:51.410 [cluster-ClusterId{value='5a43cb6f180b0817d4848200', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=915296}
27-12-2017 13:33:52.063 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:33:52.065 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:33:52.067 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:33:52.144 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:33:52.253 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@219a12ef: startup date [Wed Dec 27 13:33:45 ART 2017]; root of context hierarchy
27-12-2017 13:33:52.967 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:33:53.035 [cluster-ClusterId{value='5a43cb70180b0817d4848201', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:163}] to localhost:27017
27-12-2017 13:33:53.046 [cluster-ClusterId{value='5a43cb70180b0817d4848201', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1029125}
27-12-2017 13:33:53.433 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:164}] to localhost:27017
27-12-2017 13:33:53.579 [Thread-32] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:165}] to localhost:27017
27-12-2017 13:33:54.510 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:33:54.796 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:33:55.202 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:33:55.210 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:33:55.225 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 10.614 seconds (JVM running for 12.715)
27-12-2017 13:34:42.435 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:35:37.739 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 1576 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
27-12-2017 13:35:37.752 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
27-12-2017 13:35:38.046 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@42f97370: startup date [Wed Dec 27 13:35:38 ART 2017]; root of context hierarchy
27-12-2017 13:35:38.240 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
27-12-2017 13:35:41.985 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:35:43.475 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tarjetas/{id}],methods=[GET]}" onto public com.example.mongo.demoMongoDB.Entities.Tarjeta com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(java.lang.String) throws java.lang.Exception
27-12-2017 13:35:43.506 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:35:43.515 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
27-12-2017 13:35:43.524 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
27-12-2017 13:35:43.526 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
27-12-2017 13:35:43.527 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
27-12-2017 13:35:43.529 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
27-12-2017 13:35:43.544 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
27-12-2017 13:35:43.545 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
27-12-2017 13:35:43.546 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:35:43.547 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
27-12-2017 13:35:43.710 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:35:43.710 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
27-12-2017 13:35:44.735 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:35:44.971 [cluster-ClusterId{value='5a43cbe0180b0806280e42ec', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:166}] to localhost:27017
27-12-2017 13:35:44.987 [cluster-ClusterId{value='5a43cbe0180b0806280e42ec', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1108898}
27-12-2017 13:35:45.766 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:35:45.769 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
27-12-2017 13:35:45.771 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
27-12-2017 13:35:45.839 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
27-12-2017 13:35:45.914 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@42f97370: startup date [Wed Dec 27 13:35:38 ART 2017]; root of context hierarchy
27-12-2017 13:35:46.749 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
27-12-2017 13:35:46.809 [cluster-ClusterId{value='5a43cbe2180b0806280e42ed', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:167}] to localhost:27017
27-12-2017 13:35:46.821 [cluster-ClusterId{value='5a43cbe2180b0806280e42ed', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=947485}
27-12-2017 13:35:47.266 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:168}] to localhost:27017
27-12-2017 13:35:47.430 [Thread-34] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:169}] to localhost:27017
27-12-2017 13:35:48.709 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
27-12-2017 13:35:49.023 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
27-12-2017 13:35:49.549 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
27-12-2017 13:35:49.557 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
27-12-2017 13:35:49.572 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 13.448 seconds (JVM running for 16.396)
27-12-2017 13:36:25.358 [reactor-http-nio-2] INFO  c.e.m.d.Services.TarjetaService.findTarjetas - Invocando a la api trello
27-12-2017 13:37:09.892 [reactor-http-nio-2] ERROR c.e.m.d.Services.TarjetaService.findTarjetas - Ha ocurrido un errorI/O error on GET request for "https://api.trello.com/1/boards/se4SFvuj/cards/": sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target; nested exception is javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
27-12-2017 13:37:10.060 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/tarjetas/se4SFvuj]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Services.TarjetaService.findTarjetas(TarjetaService.java:69)
	at com.example.mongo.demoMongoDB.Controller.TarjetaController.getTarjeta(TarjetaController.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

