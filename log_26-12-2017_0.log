26-12-2017 08:45:07.263 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 288 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 08:45:07.275 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 08:45:07.529 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 08:45:07 ART 2017]; root of context hierarchy
26-12-2017 08:45:07.532 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 08:45:11.496 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 08:45:11.949 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 08:45:11.954 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 08:45:11.955 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 08:45:11.956 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 08:45:12.059 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 08:45:12.059 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 08:45:12.696 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 08:45:12.771 [cluster-ClusterId{value='5a423648180b080120d5d248', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:41}] to localhost:27017
26-12-2017 08:45:12.782 [cluster-ClusterId{value='5a423648180b080120d5d248', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1032390}
26-12-2017 08:45:13.292 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 08:45:13.294 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 08:45:13.297 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 08:45:13.404 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 08:45:13.444 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 08:45:07 ART 2017]; root of context hierarchy
26-12-2017 08:45:13.786 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 08:45:13.985 [cluster-ClusterId{value='5a423649180b080120d5d249', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:42}] to localhost:27017
26-12-2017 08:45:13.998 [cluster-ClusterId{value='5a423649180b080120d5d249', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1911765}
26-12-2017 08:45:14.621 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 08:45:14.711 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 08:45:15.023 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 08:45:15.031 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 08:45:15.039 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 8.593 seconds (JVM running for 10.955)
26-12-2017 08:45:24.386 [Thread-29] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:43}] to localhost:27017
26-12-2017 08:55:46.023 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 7104 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 08:55:46.034 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 08:55:46.161 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6d4326: startup date [Tue Dec 26 08:55:46 ART 2017]; root of context hierarchy
26-12-2017 08:55:46.203 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 08:55:49.582 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 08:55:49.998 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 08:55:50.000 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 08:55:50.001 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 08:55:50.008 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 08:55:50.009 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 08:55:50.080 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 08:55:50.080 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 08:55:50.634 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 08:55:50.702 [cluster-ClusterId{value='5a4238c6180b081bc0c657ff', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:44}] to localhost:27017
26-12-2017 08:55:50.706 [cluster-ClusterId{value='5a4238c6180b081bc0c657ff', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=905033}
26-12-2017 08:55:51.193 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 08:55:51.203 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 08:55:51.204 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 08:55:51.243 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 08:55:51.279 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6d4326: startup date [Tue Dec 26 08:55:46 ART 2017]; root of context hierarchy
26-12-2017 08:55:51.592 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 08:55:51.785 [cluster-ClusterId{value='5a4238c7180b081bc0c65800', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:45}] to localhost:27017
26-12-2017 08:55:51.786 [cluster-ClusterId{value='5a4238c7180b081bc0c65800', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=822461}
26-12-2017 08:55:52.380 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 08:55:52.472 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 08:55:52.769 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 08:55:52.770 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 08:55:52.779 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.745 seconds (JVM running for 9.631)
26-12-2017 08:56:07.992 [Thread-27] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:46}] to localhost:27017
26-12-2017 09:31:00.509 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 7760 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 09:31:00.518 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 09:31:00.675 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 09:31:00 ART 2017]; root of context hierarchy
26-12-2017 09:31:00.716 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 09:31:03.950 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:31:04.411 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:31:04.413 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 09:31:04.415 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:31:04.426 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 09:31:04.426 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 09:31:04.428 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(reactor.core.publisher.Mono<java.lang.String>)
26-12-2017 09:31:04.429 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 09:31:04.506 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:31:04.507 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:31:05.084 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:31:05.155 [cluster-ClusterId{value='5a424109180b081e50975680', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:47}] to localhost:27017
26-12-2017 09:31:05.168 [cluster-ClusterId{value='5a424109180b081e50975680', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1265646}
26-12-2017 09:31:05.711 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:31:05.712 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:31:05.714 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 09:31:05.755 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:31:05.793 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 09:31:00 ART 2017]; root of context hierarchy
26-12-2017 09:31:06.111 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:31:06.316 [cluster-ClusterId{value='5a42410a180b081e50975681', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:48}] to localhost:27017
26-12-2017 09:31:06.327 [cluster-ClusterId{value='5a42410a180b081e50975681', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1012330}
26-12-2017 09:31:06.546 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:49}] to localhost:27017
26-12-2017 09:31:07.074 [Thread-27] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:50}] to localhost:27017
26-12-2017 09:31:07.963 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 09:31:08.056 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 09:31:08.371 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 09:31:08.381 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 09:31:08.388 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 8.602 seconds (JVM running for 10.264)
26-12-2017 09:31:29.773 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [POST http://localhost:9080/api/user]
org.springframework.dao.InvalidDataAccessApiUsageException: Cannot autogenerate id of type java.lang.Long for entity of type com.example.mongo.demoMongoDB.Entities.Persona!
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.assertUpdateableIdIfNotSet(ReactiveMongoTemplate.java:1571)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.doInsert(ReactiveMongoTemplate.java:984)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.insert(ReactiveMongoTemplate.java:979)
	at org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:286)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at com.example.mongo.demoMongoDB.Controller.UserController.registrar(UserController.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onComplete(MonoSingle.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:134)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:773)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:523)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:409)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:245)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at reactor.ipc.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:377)
	at reactor.ipc.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202)
	at reactor.ipc.netty.channel.FluxReceive.request(FluxReceive.java:110)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:130)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:163)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.ipc.netty.channel.FluxReceive.startReceiver(FluxReceive.java:273)
	at reactor.ipc.netty.channel.FluxReceive.subscribe(FluxReceive.java:124)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.ipc.netty.ByteBufFlux.subscribe(ByteBufFlux.java:242)
	at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:83)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.ipc.netty.ByteBufFlux.subscribe(ByteBufFlux.java:242)
	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxDoFinallyFuseable.subscribe(FluxDoFinallyFuseable.java:48)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 09:31:47.383 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 7732 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 09:31:47.390 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 09:31:47.566 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2fb5803d: startup date [Tue Dec 26 09:31:47 ART 2017]; root of context hierarchy
26-12-2017 09:31:47.614 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 09:31:50.895 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:31:51.530 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 09:31:51.533 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:31:51.535 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 09:31:51.546 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 09:31:51.547 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:31:51.549 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 09:31:51.550 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(reactor.core.publisher.Mono<java.lang.String>)
26-12-2017 09:31:51.639 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:31:51.640 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:31:52.251 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:31:52.351 [cluster-ClusterId{value='5a424138180b081e34930a4f', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:51}] to localhost:27017
26-12-2017 09:31:52.365 [cluster-ClusterId{value='5a424138180b081e34930a4f', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=966612}
26-12-2017 09:31:52.811 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:31:52.813 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:31:52.815 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 09:31:52.877 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:31:52.913 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@2fb5803d: startup date [Tue Dec 26 09:31:47 ART 2017]; root of context hierarchy
26-12-2017 09:31:53.221 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:31:53.442 [cluster-ClusterId{value='5a424139180b081e34930a50', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:52}] to localhost:27017
26-12-2017 09:31:53.455 [cluster-ClusterId{value='5a424139180b081e34930a50', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=985273}
26-12-2017 09:31:53.583 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:53}] to localhost:27017
26-12-2017 09:31:53.652 [Thread-29] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:54}] to localhost:27017
26-12-2017 09:31:54.175 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 09:31:54.269 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 09:31:54.570 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 09:31:54.578 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 09:31:54.584 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.966 seconds (JVM running for 9.658)
26-12-2017 09:32:48.626 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/Gonzalo]
java.lang.IllegalStateException: PathVariableMethodArgumentResolver doesn't support reactive type wrapper: reactor.core.publisher.Mono<java.lang.String>
	at org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport.buildReactiveWrapperException(HandlerMethodArgumentResolverSupport.java:99)
	at org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport.checkAnnotatedParamNoReactiveWrapper(HandlerMethodArgumentResolverSupport.java:130)
	at org.springframework.web.reactive.result.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(PathVariableMethodArgumentResolver.java:72)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$findResolver$6(InvocableHandlerMethod.java:205)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:174)
	at java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1351)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.findResolver(InvocableHandlerMethod.java:206)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$null$1(InvocableHandlerMethod.java:178)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$resolveArguments$2(InvocableHandlerMethod.java:177)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.resolveArguments(InvocableHandlerMethod.java:183)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 09:34:07.966 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9908 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 09:34:07.974 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 09:34:08.130 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@14fcfc2e: startup date [Tue Dec 26 09:34:08 ART 2017]; root of context hierarchy
26-12-2017 09:34:08.282 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 09:34:11.368 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:34:11.762 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 09:34:11.765 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 09:34:11.766 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:34:11.775 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 09:34:11.776 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 09:34:11.778 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 09:34:11.779 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 09:34:11.853 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:34:11.854 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 09:34:12.421 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:34:12.488 [cluster-ClusterId{value='5a4241c4180b0826b4642e8f', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:59}] to localhost:27017
26-12-2017 09:34:12.499 [cluster-ClusterId{value='5a4241c4180b0826b4642e8f', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=794470}
26-12-2017 09:34:12.949 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:34:12.950 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 09:34:12.952 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 09:34:12.995 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 09:34:13.031 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@14fcfc2e: startup date [Tue Dec 26 09:34:08 ART 2017]; root of context hierarchy
26-12-2017 09:34:13.344 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 09:34:13.545 [cluster-ClusterId{value='5a4241c5180b0826b4642e90', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:60}] to localhost:27017
26-12-2017 09:34:13.562 [cluster-ClusterId{value='5a4241c5180b0826b4642e90', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1060381}
26-12-2017 09:34:13.697 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:61}] to localhost:27017
26-12-2017 09:34:13.760 [Thread-26] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:62}] to localhost:27017
26-12-2017 09:34:14.269 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 09:34:14.379 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 09:34:14.676 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 09:34:14.683 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 09:34:14.689 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.507 seconds (JVM running for 9.088)
26-12-2017 10:07:23.639 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 4108 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:07:23.672 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:07:23.925 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5922f8ac: startup date [Tue Dec 26 10:07:23 ART 2017]; root of context hierarchy
26-12-2017 10:07:24.054 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:07:28.077 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:07:28.653 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:07:28.656 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:07:28.658 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:07:28.667 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:07:28.667 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:07:28.672 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:07:28.673 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:07:28.681 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:07:28.681 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:07:28.758 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:07:28.759 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:07:29.479 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:07:29.566 [cluster-ClusterId{value='5a424991180b08100c7dc0b3', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:63}] to localhost:27017
26-12-2017 10:07:29.579 [cluster-ClusterId{value='5a424991180b08100c7dc0b3', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1090238}
26-12-2017 10:07:30.123 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:07:30.132 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:07:30.134 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:07:30.214 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:07:30.253 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5922f8ac: startup date [Tue Dec 26 10:07:23 ART 2017]; root of context hierarchy
26-12-2017 10:07:30.637 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:07:30.845 [cluster-ClusterId{value='5a424992180b08100c7dc0b4', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:64}] to localhost:27017
26-12-2017 10:07:30.847 [cluster-ClusterId{value='5a424992180b08100c7dc0b4', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1093970}
26-12-2017 10:07:31.014 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:65}] to localhost:27017
26-12-2017 10:07:31.096 [Thread-28] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:66}] to localhost:27017
26-12-2017 10:07:31.768 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:07:31.874 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:07:32.227 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:07:32.236 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:07:32.252 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.357 seconds (JVM running for 11.47)
26-12-2017 10:54:32.204 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 5736 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:54:32.213 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:54:32.433 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 10:54:32 ART 2017]; root of context hierarchy
26-12-2017 10:54:32.473 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:54:35.834 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:54:36.288 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:54:36.289 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:54:36.290 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:54:36.301 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 10:54:36.302 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:54:36.303 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:54:36.307 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:54:36.314 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:54:36.315 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:54:36.316 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:54:36.400 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:54:36.408 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:54:37.022 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:54:37.103 [cluster-ClusterId{value='5a42549d180b081668f41bd6', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:67}] to localhost:27017
26-12-2017 10:54:37.106 [cluster-ClusterId{value='5a42549d180b081668f41bd6', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=834123}
26-12-2017 10:54:37.595 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:54:37.603 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:54:37.605 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:54:37.671 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:54:37.731 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 10:54:32 ART 2017]; root of context hierarchy
26-12-2017 10:54:38.076 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:54:38.281 [cluster-ClusterId{value='5a42549e180b081668f41bd7', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:68}] to localhost:27017
26-12-2017 10:54:38.283 [cluster-ClusterId{value='5a42549e180b081668f41bd7', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1188671}
26-12-2017 10:54:38.577 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:69}] to localhost:27017
26-12-2017 10:54:38.658 [Thread-27] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:70}] to localhost:27017
26-12-2017 10:54:39.225 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:54:39.345 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:54:39.849 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:54:39.850 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:54:39.860 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 8.408 seconds (JVM running for 10.23)
26-12-2017 10:54:44.244 [Thread-27] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.RuntimeException: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:194)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:178)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:88)
	at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:430)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:450)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeCollectionInternal(MappingMongoConverter.java:682)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createCollection(MappingMongoConverter.java:602)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:512)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:392)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:86)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.toDbObject(ReactiveMongoTemplate.java:2273)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$doSave$30(ReactiveMongoTemplate.java:1200)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$createMono$6(ReactiveMongoTemplate.java:475)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:141)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.createMono(ReactiveMongoTemplate.java:475)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.doSave(ReactiveMongoTemplate.java:1197)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.save(ReactiveMongoTemplate.java:1142)
	org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:289)
	org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:80)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(ReactiveMongoTemplate.java:475)
	|_	MonoNext$NextSubscriber.onNext(ObservableToPublisher.java:68)
	|_	Mono.onErrorMap(ReactiveMongoTemplate.java:476)
	|_	Mono.flatMap(TweetsController.java:78)
	|_	Mono.map(TweetsController.java:82)
	|_	Mono.defaultIfEmpty(TweetsController.java:83)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

Caused by: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:307)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:192)
	... 83 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:459)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:305)
	... 84 common frames omitted
Caused by: java.lang.NoClassDefFoundError: IllegalName: reactor.core.publisher.Mono$$Lambda$679/2047381978_Accessor_shxkb6
	at java.lang.ClassLoader.preDefineClass(ClassLoader.java:654)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:761)
	... 89 common frames omitted
26-12-2017 10:55:12.979 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 8352 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:55:12.990 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:55:13.165 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@171c8b72: startup date [Tue Dec 26 10:55:13 ART 2017]; root of context hierarchy
26-12-2017 10:55:13.217 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:55:17.046 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:55:17.600 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:55:17.604 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:55:17.605 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 10:55:17.614 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:55:17.614 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:55:17.615 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:55:17.619 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:55:17.627 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:55:17.627 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:55:17.628 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:55:17.746 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:55:17.753 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:55:18.462 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:55:18.610 [cluster-ClusterId{value='5a4254c6180b0820a0072e31', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:71}] to localhost:27017
26-12-2017 10:55:18.625 [cluster-ClusterId{value='5a4254c6180b0820a0072e31', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=998335}
26-12-2017 10:55:19.381 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:55:19.384 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:55:19.387 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:55:19.463 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:55:19.533 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@171c8b72: startup date [Tue Dec 26 10:55:13 ART 2017]; root of context hierarchy
26-12-2017 10:55:20.232 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:55:20.262 [cluster-ClusterId{value='5a4254c8180b0820a0072e32', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:72}] to localhost:27017
26-12-2017 10:55:20.264 [cluster-ClusterId{value='5a4254c8180b0820a0072e32', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1063646}
26-12-2017 10:55:20.570 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:73}] to localhost:27017
26-12-2017 10:55:20.638 [Thread-28] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:74}] to localhost:27017
26-12-2017 10:55:21.325 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:55:21.600 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:55:21.936 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:55:21.944 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:55:21.959 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.659 seconds (JVM running for 12.034)
26-12-2017 10:56:47.959 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9768 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:56:47.967 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:56:48.110 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6f85dc12: startup date [Tue Dec 26 10:56:48 ART 2017]; root of context hierarchy
26-12-2017 10:56:48.157 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:56:51.718 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:56:52.262 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:56:52.264 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:56:52.266 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:56:52.277 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 10:56:52.279 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:56:52.280 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:56:52.285 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:56:52.293 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:56:52.293 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:56:52.294 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:56:52.383 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:56:52.392 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:56:53.128 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:56:53.260 [cluster-ClusterId{value='5a425525180b082628736ea3', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:75}] to localhost:27017
26-12-2017 10:56:53.272 [cluster-ClusterId{value='5a425525180b082628736ea3', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=930224}
26-12-2017 10:56:53.854 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:56:53.856 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:56:53.858 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:56:53.923 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:56:53.994 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6f85dc12: startup date [Tue Dec 26 10:56:48 ART 2017]; root of context hierarchy
26-12-2017 10:56:54.656 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:56:54.686 [cluster-ClusterId{value='5a425526180b082628736ea4', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:76}] to localhost:27017
26-12-2017 10:56:54.688 [cluster-ClusterId{value='5a425526180b082628736ea4', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1064114}
26-12-2017 10:56:55.003 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:77}] to localhost:27017
26-12-2017 10:56:55.096 [Thread-29] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:78}] to localhost:27017
26-12-2017 10:56:55.784 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:56:56.022 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:56:56.346 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:56:56.347 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:56:56.356 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.245 seconds (JVM running for 11.342)
26-12-2017 10:59:03.011 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9760 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:59:03.020 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:59:03.173 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 10:59:03 ART 2017]; root of context hierarchy
26-12-2017 10:59:03.306 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:59:06.179 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:59:06.655 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:59:06.659 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:59:06.660 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:59:06.668 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:59:06.669 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 10:59:06.670 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:59:06.673 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:59:06.681 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:59:06.682 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:59:06.682 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:59:06.763 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:59:06.774 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:59:07.403 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:59:07.491 [cluster-ClusterId{value='5a4255ab180b08262026a6ea', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:79}] to localhost:27017
26-12-2017 10:59:07.496 [cluster-ClusterId{value='5a4255ab180b08262026a6ea', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=920427}
26-12-2017 10:59:07.990 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:59:08.001 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:59:08.004 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:59:08.052 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:59:08.121 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 10:59:03 ART 2017]; root of context hierarchy
26-12-2017 10:59:08.478 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:59:08.694 [cluster-ClusterId{value='5a4255ac180b08262026a6eb', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:80}] to localhost:27017
26-12-2017 10:59:08.696 [cluster-ClusterId{value='5a4255ac180b08262026a6eb', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1362214}
26-12-2017 10:59:08.942 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:81}] to localhost:27017
26-12-2017 10:59:09.005 [Thread-26] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:82}] to localhost:27017
26-12-2017 10:59:09.523 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:59:09.616 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:59:09.930 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:59:09.931 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:59:09.938 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.758 seconds (JVM running for 9.31)
26-12-2017 10:59:21.097 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 8268 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 10:59:21.108 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 10:59:21.246 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@289590fd: startup date [Tue Dec 26 10:59:21 ART 2017]; root of context hierarchy
26-12-2017 10:59:21.385 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 10:59:24.516 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:59:25.063 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:59:25.065 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 10:59:25.066 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 10:59:25.074 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 10:59:25.075 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 10:59:25.075 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 10:59:25.079 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 10:59:25.087 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:59:25.088 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 10:59:25.088 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 10:59:25.197 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:59:25.205 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 10:59:26.078 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:59:26.183 [cluster-ClusterId{value='5a4255be180b08204c856a01', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:83}] to localhost:27017
26-12-2017 10:59:26.188 [cluster-ClusterId{value='5a4255be180b08204c856a01', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=957282}
26-12-2017 10:59:26.821 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:59:26.823 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 10:59:26.832 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 10:59:26.884 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 10:59:26.939 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@289590fd: startup date [Tue Dec 26 10:59:21 ART 2017]; root of context hierarchy
26-12-2017 10:59:27.562 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 10:59:27.599 [cluster-ClusterId{value='5a4255bf180b08204c856a02', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:84}] to localhost:27017
26-12-2017 10:59:27.601 [cluster-ClusterId{value='5a4255bf180b08204c856a02', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1094437}
26-12-2017 10:59:27.899 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:85}] to localhost:27017
26-12-2017 10:59:27.968 [Thread-26] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:86}] to localhost:27017
26-12-2017 10:59:28.664 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 10:59:28.935 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 10:59:29.256 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 10:59:29.263 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 10:59:29.279 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.166 seconds (JVM running for 11.059)
26-12-2017 11:02:39.813 [Thread-27] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.RuntimeException: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:194)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:178)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:88)
	at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:430)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:450)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeCollectionInternal(MappingMongoConverter.java:682)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createCollection(MappingMongoConverter.java:602)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:512)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:392)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:86)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.toDbObject(ReactiveMongoTemplate.java:2273)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$doSave$30(ReactiveMongoTemplate.java:1200)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$createMono$6(ReactiveMongoTemplate.java:475)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:141)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.createMono(ReactiveMongoTemplate.java:475)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.doSave(ReactiveMongoTemplate.java:1197)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.save(ReactiveMongoTemplate.java:1142)
	org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:289)
	org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:80)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(ReactiveMongoTemplate.java:475)
	|_	MonoNext$NextSubscriber.onNext(ObservableToPublisher.java:68)
	|_	Mono.onErrorMap(ReactiveMongoTemplate.java:476)
	|_	Mono.flatMap(TweetsController.java:78)
	|_	Mono.map(TweetsController.java:82)
	|_	Mono.defaultIfEmpty(TweetsController.java:83)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

Caused by: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:307)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:192)
	... 83 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:459)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:305)
	... 84 common frames omitted
Caused by: java.lang.NoClassDefFoundError: IllegalName: reactor.core.publisher.Mono$$Lambda$679/1977704987_Accessor_59gjbd
	at java.lang.ClassLoader.preDefineClass(ClassLoader.java:654)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:761)
	... 89 common frames omitted
26-12-2017 11:04:41.212 [Thread-26] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.RuntimeException: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:194)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:178)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:88)
	at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:430)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:450)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeCollectionInternal(MappingMongoConverter.java:682)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createCollection(MappingMongoConverter.java:602)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:512)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:392)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:86)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.toDbObject(ReactiveMongoTemplate.java:2273)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$doSave$30(ReactiveMongoTemplate.java:1200)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$createMono$6(ReactiveMongoTemplate.java:475)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:141)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.createMono(ReactiveMongoTemplate.java:475)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.doSave(ReactiveMongoTemplate.java:1197)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.save(ReactiveMongoTemplate.java:1142)
	org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:289)
	org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:80)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(ReactiveMongoTemplate.java:475)
	|_	MonoNext$NextSubscriber.onNext(ObservableToPublisher.java:68)
	|_	Mono.onErrorMap(ReactiveMongoTemplate.java:476)
	|_	Mono.flatMap(TweetsController.java:78)
	|_	Mono.map(TweetsController.java:82)
	|_	Mono.defaultIfEmpty(TweetsController.java:83)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

Caused by: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:307)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:192)
	... 83 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:459)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:305)
	... 84 common frames omitted
Caused by: java.lang.NoClassDefFoundError: IllegalName: reactor.core.publisher.Mono$$Lambda$679/1977704987_Accessor_59gjbd
	at java.lang.ClassLoader.preDefineClass(ClassLoader.java:654)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:761)
	... 89 common frames omitted
26-12-2017 11:06:20.741 [Thread-27] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.RuntimeException: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:194)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:178)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:88)
	at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:430)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:450)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeCollectionInternal(MappingMongoConverter.java:682)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createCollection(MappingMongoConverter.java:602)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:512)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:392)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:86)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.toDbObject(ReactiveMongoTemplate.java:2273)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$doSave$30(ReactiveMongoTemplate.java:1200)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$createMono$6(ReactiveMongoTemplate.java:475)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:141)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.createMono(ReactiveMongoTemplate.java:475)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.doSave(ReactiveMongoTemplate.java:1197)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.save(ReactiveMongoTemplate.java:1142)
	org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:289)
	org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:80)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(ReactiveMongoTemplate.java:475)
	|_	MonoNext$NextSubscriber.onNext(ObservableToPublisher.java:68)
	|_	Mono.onErrorMap(ReactiveMongoTemplate.java:476)
	|_	Mono.flatMap(TweetsController.java:78)
	|_	Mono.map(TweetsController.java:82)
	|_	Mono.defaultIfEmpty(TweetsController.java:83)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

Caused by: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:307)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:192)
	... 83 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:459)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:305)
	... 84 common frames omitted
Caused by: java.lang.NoClassDefFoundError: IllegalName: reactor.core.publisher.Mono$$Lambda$679/1977704987_Accessor_59gjbd
	at java.lang.ClassLoader.preDefineClass(ClassLoader.java:654)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:761)
	... 89 common frames omitted
26-12-2017 11:09:10.847 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 5856 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 11:09:10.858 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 11:09:11.098 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Tue Dec 26 11:09:11 ART 2017]; root of context hierarchy
26-12-2017 11:09:11.374 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 11:09:17.057 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:09:17.832 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:09:17.858 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 11:09:17.870 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 11:09:17.890 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:09:17.892 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 11:09:17.893 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 11:09:17.900 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 11:09:17.910 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 11:09:17.911 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:09:17.913 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{nombre}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)
26-12-2017 11:09:17.914 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:09:18.106 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:09:18.107 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:09:19.004 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:09:19.142 [cluster-ClusterId{value='5a42580e180b0816e0522569', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:87}] to localhost:27017
26-12-2017 11:09:19.170 [cluster-ClusterId{value='5a42580e180b0816e0522569', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1009998}
26-12-2017 11:09:20.501 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:09:20.515 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:09:20.528 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 11:09:20.689 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:09:20.783 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Tue Dec 26 11:09:11 ART 2017]; root of context hierarchy
26-12-2017 11:09:21.549 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:09:21.588 [cluster-ClusterId{value='5a425811180b0816e052256a', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:88}] to localhost:27017
26-12-2017 11:09:21.598 [cluster-ClusterId{value='5a425811180b0816e052256a', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1095836}
26-12-2017 11:09:21.970 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:89}] to localhost:27017
26-12-2017 11:09:22.127 [Thread-36] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:90}] to localhost:27017
26-12-2017 11:09:23.235 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 11:09:23.711 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 11:09:24.100 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 11:09:24.108 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 11:09:24.118 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 14.375 seconds (JVM running for 16.759)
26-12-2017 11:13:39.947 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/5a424149180b081e34930a51]
java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path 'DefaultRequestPath[fullPath='[path='/api/user/5a424149180b081e34930a51']', contextPath='', pathWithinApplication='/api/user/5a424149180b081e34930a51']': {reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String), reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)}
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:322)
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:252)
	org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:269)
	org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.error(AbstractHandlerMethodMapping.java:269)
	|_	Mono.map(AbstractHandlerMapping.java:134)
	|_	Flux.concatMap(DispatcherHandler.java:157)
	|_	Flux.next(DispatcherHandler.java:158)
	|_	Mono.switchIfEmpty(DispatcherHandler.java:159)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:13:58.942 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/5a424149180b081e34930a51]
java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path 'DefaultRequestPath[fullPath='[path='/api/user/5a424149180b081e34930a51']', contextPath='', pathWithinApplication='/api/user/5a424149180b081e34930a51']': {reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String), reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)}
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:322)
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:252)
	org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:269)
	org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.error(AbstractHandlerMethodMapping.java:269)
	|_	Mono.map(AbstractHandlerMapping.java:134)
	|_	Flux.concatMap(DispatcherHandler.java:157)
	|_	Flux.next(DispatcherHandler.java:158)
	|_	Mono.switchIfEmpty(DispatcherHandler.java:159)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:14:17.034 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/5a424149180b081e34930a51]
java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path 'DefaultRequestPath[fullPath='[path='/api/user/5a424149180b081e34930a51']', contextPath='', pathWithinApplication='/api/user/5a424149180b081e34930a51']': {reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String), reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)}
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:322)
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:252)
	org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:269)
	org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.error(AbstractHandlerMethodMapping.java:269)
	|_	Mono.map(AbstractHandlerMapping.java:134)
	|_	Flux.concatMap(DispatcherHandler.java:157)
	|_	Flux.next(DispatcherHandler.java:158)
	|_	Mono.switchIfEmpty(DispatcherHandler.java:159)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:14:21.916 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/5a424149180b081e34930a51]
java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path 'DefaultRequestPath[fullPath='[path='/api/user/5a424149180b081e34930a51']', contextPath='', pathWithinApplication='/api/user/5a424149180b081e34930a51']': {reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String), reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)}
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:322)
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:252)
	org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:269)
	org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.error(AbstractHandlerMethodMapping.java:269)
	|_	Mono.map(AbstractHandlerMapping.java:134)
	|_	Flux.concatMap(DispatcherHandler.java:157)
	|_	Flux.next(DispatcherHandler.java:158)
	|_	Mono.switchIfEmpty(DispatcherHandler.java:159)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:15:04.751 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [GET http://localhost:9080/api/user/gonza]
java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path 'DefaultRequestPath[fullPath='[path='/api/user/gonza']', contextPath='', pathWithinApplication='/api/user/gonza']': {reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String), reactor.core.publisher.Mono com.example.mongo.demoMongoDB.Controller.UserController.findBynombre(java.lang.String)}
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:322)
	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:252)
	org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:269)
	org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:134)
	org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:157)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:357)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.error(AbstractHandlerMethodMapping.java:269)
	|_	Mono.map(AbstractHandlerMapping.java:134)
	|_	Flux.concatMap(DispatcherHandler.java:157)
	|_	Flux.next(DispatcherHandler.java:158)
	|_	Mono.switchIfEmpty(DispatcherHandler.java:159)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:15:30.373 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 8272 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 11:15:30.384 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 11:15:30.555 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Tue Dec 26 11:15:30 ART 2017]; root of context hierarchy
26-12-2017 11:15:30.589 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 11:15:33.899 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:15:34.384 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:15:34.386 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:15:34.387 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 11:15:34.397 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 11:15:34.398 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 11:15:34.399 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 11:15:35.082 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 11:15:35.091 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 11:15:35.092 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:15:35.093 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:15:35.238 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:15:35.246 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:15:36.232 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:15:36.598 [cluster-ClusterId{value='5a425988180b082050ee891c', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:91}] to localhost:27017
26-12-2017 11:15:36.611 [cluster-ClusterId{value='5a425988180b082050ee891c', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=892903}
26-12-2017 11:15:37.208 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:15:37.211 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:15:37.220 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 11:15:37.276 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:15:37.358 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@78e571c1: startup date [Tue Dec 26 11:15:30 ART 2017]; root of context hierarchy
26-12-2017 11:15:38.173 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:15:38.306 [cluster-ClusterId{value='5a42598a180b082050ee891d', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:92}] to localhost:27017
26-12-2017 11:15:38.315 [cluster-ClusterId{value='5a42598a180b082050ee891d', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=993203}
26-12-2017 11:15:38.697 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:93}] to localhost:27017
26-12-2017 11:15:38.830 [Thread-30] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:94}] to localhost:27017
26-12-2017 11:15:39.646 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 11:15:39.883 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 11:15:40.282 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 11:15:40.290 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 11:15:40.311 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 10.76 seconds (JVM running for 12.642)
26-12-2017 11:18:46.392 [Thread-29] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.RuntimeException: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:194)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.potentiallyCreateAndRegisterPersistentPropertyAccessorClass(ClassGeneratingPropertyAccessorFactory.java:178)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.getPropertyAccessor(ClassGeneratingPropertyAccessorFactory.java:88)
	at org.springframework.data.mapping.model.BasicPersistentEntity.getPropertyAccessor(BasicPersistentEntity.java:430)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:450)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:566)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeCollectionInternal(MappingMongoConverter.java:682)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createCollection(MappingMongoConverter.java:602)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:512)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeProperties(MappingMongoConverter.java:486)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:462)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:436)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:392)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:86)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.toDbObject(ReactiveMongoTemplate.java:2273)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$doSave$30(ReactiveMongoTemplate.java:1200)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$createMono$6(ReactiveMongoTemplate.java:475)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:141)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.createMono(ReactiveMongoTemplate.java:475)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.doSave(ReactiveMongoTemplate.java:1197)
	org.springframework.data.mongodb.core.ReactiveMongoTemplate.save(ReactiveMongoTemplate.java:1142)
	org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository.save(SimpleReactiveMongoRepository.java:289)
	org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:636)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:600)
	org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:580)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:338)
	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:80)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(ReactiveMongoTemplate.java:475)
	|_	MonoNext$NextSubscriber.onNext(ObservableToPublisher.java:68)
	|_	Mono.onErrorMap(ReactiveMongoTemplate.java:476)
	|_	Mono.flatMap(TweetsController.java:78)
	|_	Mono.map(TweetsController.java:82)
	|_	Mono.defaultIfEmpty(TweetsController.java:83)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

Caused by: java.lang.IllegalStateException: java.lang.reflect.InvocationTargetException
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:307)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.createAccessorClass(ClassGeneratingPropertyAccessorFactory.java:192)
	... 83 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:459)
	at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass(ClassGeneratingPropertyAccessorFactory.java:305)
	... 84 common frames omitted
Caused by: java.lang.NoClassDefFoundError: IllegalName: reactor.core.publisher.Mono$$Lambda$677/1334459125_Accessor_qt8rvm
	at java.lang.ClassLoader.preDefineClass(ClassLoader.java:654)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:761)
	... 89 common frames omitted
26-12-2017 11:45:27.458 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 2256 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 11:45:27.518 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 11:45:27.691 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 11:45:27 ART 2017]; root of context hierarchy
26-12-2017 11:45:27.846 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 11:45:30.833 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:45:31.247 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 11:45:31.261 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 11:45:31.269 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:45:31.277 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 11:45:31.278 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:45:31.279 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 11:45:31.283 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 11:45:31.291 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 11:45:31.292 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:45:31.293 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:45:31.362 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:45:31.370 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:45:32.181 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:45:32.303 [cluster-ClusterId{value='5a42608c180b0808d0d1b892', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:95}] to localhost:27017
26-12-2017 11:45:32.309 [cluster-ClusterId{value='5a42608c180b0808d0d1b892', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1316496}
26-12-2017 11:45:32.891 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:45:32.893 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:45:32.895 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 11:45:32.940 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:45:32.987 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@74900f18: startup date [Tue Dec 26 11:45:27 ART 2017]; root of context hierarchy
26-12-2017 11:45:33.583 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:45:33.612 [cluster-ClusterId{value='5a42608d180b0808d0d1b893', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:96}] to localhost:27017
26-12-2017 11:45:33.613 [cluster-ClusterId{value='5a42608d180b0808d0d1b893', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=771610}
26-12-2017 11:45:33.825 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:97}] to localhost:27017
26-12-2017 11:45:33.895 [Thread-26] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:98}] to localhost:27017
26-12-2017 11:45:34.563 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 11:45:34.705 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 11:45:35.112 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 11:45:35.134 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 11:45:35.148 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 8.803 seconds (JVM running for 11.509)
26-12-2017 11:45:46.292 [Thread-29] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(TweetsController.java:74)
	|_	Mono.map(TweetsController.java:78)
	|_	Mono.defaultIfEmpty(TweetsController.java:79)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 11:46:08.250 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9412 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 11:46:08.262 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 11:46:08.679 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@371665c: startup date [Tue Dec 26 11:46:08 ART 2017]; root of context hierarchy
26-12-2017 11:46:08.712 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 11:46:12.532 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:46:13.150 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 11:46:13.153 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 11:46:13.155 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:46:13.168 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 11:46:13.170 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 11:46:13.171 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 11:46:14.350 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:46:14.370 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 11:46:14.371 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 11:46:14.373 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 11:46:14.559 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:46:14.567 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 11:46:15.761 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:46:16.168 [cluster-ClusterId{value='5a4260b7180b0824c4cd5d32', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:99}] to localhost:27017
26-12-2017 11:46:16.189 [cluster-ClusterId{value='5a4260b7180b0824c4cd5d32', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1000201}
26-12-2017 11:46:17.079 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:46:17.102 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 11:46:17.118 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 11:46:17.230 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 11:46:17.361 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@371665c: startup date [Tue Dec 26 11:46:08 ART 2017]; root of context hierarchy
26-12-2017 11:46:18.331 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 11:46:18.392 [cluster-ClusterId{value='5a4260ba180b0824c4cd5d33', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:100}] to localhost:27017
26-12-2017 11:46:18.394 [cluster-ClusterId{value='5a4260ba180b0824c4cd5d33', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=815463}
26-12-2017 11:46:18.683 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:101}] to localhost:27017
26-12-2017 11:46:18.849 [Thread-36] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:102}] to localhost:27017
26-12-2017 11:46:19.815 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 11:46:20.052 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 11:46:20.450 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 11:46:20.457 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 11:46:20.479 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 13.19 seconds (JVM running for 16.158)
26-12-2017 11:47:49.012 [Thread-36] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(TweetsController.java:74)
	|_	Mono.map(TweetsController.java:78)
	|_	Mono.defaultIfEmpty(TweetsController.java:79)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 12:01:47.770 [Thread-36] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(TweetsController.java:74)
	|_	Mono.map(TweetsController.java:78)
	|_	Mono.defaultIfEmpty(TweetsController.java:79)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 12:07:56.295 [Thread-36] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.lambda$addLikeTweet$4(TweetsController.java:75)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onNext(ObservableToPublisher.java:68)
	at com.mongodb.async.client.AbstractSubscription.onNext(AbstractSubscription.java:135)
	at com.mongodb.async.client.AbstractSubscription.processResultsQueue(AbstractSubscription.java:203)
	at com.mongodb.async.client.AbstractSubscription.tryProcessResultsQueue(AbstractSubscription.java:159)
	at com.mongodb.async.client.AbstractSubscription.addToQueue(AbstractSubscription.java:110)
	at com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:47)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:109)
	at com.mongodb.async.client.OperationIterable$3$1.onResult(OperationIterable.java:100)
	at com.mongodb.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:101)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:100)
	at com.mongodb.async.client.OperationIterable$3.onResult(OperationIterable.java:93)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.async.client.MongoClientImpl$2$1.onResult(MongoClientImpl.java:127)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.operation.FindOperation$3.onResult(FindOperation.java:820)
	at com.mongodb.operation.OperationHelper$ReferenceCountedReleasingWrappedCallback.onResult(OperationHelper.java:366)
	at com.mongodb.operation.CommandOperationHelper$1.onResult(CommandOperationHelper.java:385)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor$1.onResult(DefaultServer.java:176)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.CommandProtocol$CommandResultCallback.callCallback(CommandProtocol.java:264)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:48)
	at com.mongodb.connection.ResponseCallback.onResult(ResponseCallback.java:23)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:468)
	at com.mongodb.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:462)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:119)
	at com.mongodb.connection.UsageTrackingInternalConnection$3.onResult(UsageTrackingInternalConnection.java:115)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
	at com.mongodb.connection.InternalStreamConnection.executeCallbackAndReceiveResponse(InternalStreamConnection.java:358)
	at com.mongodb.connection.InternalStreamConnection.access$1600(InternalStreamConnection.java:61)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:400)
	at com.mongodb.connection.InternalStreamConnection$ResponseBuffersCallback.onResult(InternalStreamConnection.java:369)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.onSuccess(InternalStreamConnection.java:538)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback.access$2100(InternalStreamConnection.java:497)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:560)
	at com.mongodb.connection.InternalStreamConnection$ResponseHeaderCallback$ResponseBodyCallback.onResult(InternalStreamConnection.java:544)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:427)
	at com.mongodb.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:424)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:219)
	at com.mongodb.connection.AsynchronousSocketChannelStream$BasicCompletionHandler.completed(AsynchronousSocketChannelStream.java:202)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:281)
	at sun.nio.ch.WindowsAsynchronousSocketChannelImpl$ReadTask.completed(WindowsAsynchronousSocketChannelImpl.java:579)
	at sun.nio.ch.Iocp$EventHandlerTask.run(Iocp.java:397)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(TweetsController.java:74)
	|_	Mono.map(TweetsController.java:78)
	|_	Mono.defaultIfEmpty(TweetsController.java:79)
	|_	Mono.flatMap(ResponseEntityResultHandler.java:129)
	|_	Mono.flatMap(DispatcherHandler.java:177)
	|_	Mono.onErrorResume(DispatcherHandler.java:177)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 12:23:14.416 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 8620 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 12:23:14.426 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 12:23:14.683 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@371665c: startup date [Tue Dec 26 12:23:14 ART 2017]; root of context hierarchy
26-12-2017 12:23:14.870 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 12:23:18.842 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:23:19.560 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 12:23:19.562 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 12:23:19.563 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 12:23:19.573 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:23:19.574 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:23:19.575 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 12:23:19.579 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 12:23:19.586 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 12:23:19.587 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:23:19.588 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:23:19.685 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:23:19.693 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:23:20.454 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:23:20.586 [cluster-ClusterId{value='5a426968180b0821ac91475e', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:103}] to localhost:27017
26-12-2017 12:23:20.597 [cluster-ClusterId{value='5a426968180b0821ac91475e', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=969412}
26-12-2017 12:23:21.331 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:23:21.333 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:23:21.335 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 12:23:21.443 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:23:21.631 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@371665c: startup date [Tue Dec 26 12:23:14 ART 2017]; root of context hierarchy
26-12-2017 12:23:22.597 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:23:22.636 [cluster-ClusterId{value='5a42696a180b0821ac91475f', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:104}] to localhost:27017
26-12-2017 12:23:22.648 [cluster-ClusterId{value='5a42696a180b0821ac91475f', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1142953}
26-12-2017 12:23:22.912 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:105}] to localhost:27017
26-12-2017 12:23:23.011 [Thread-28] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:106}] to localhost:27017
26-12-2017 12:23:24.215 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 12:23:24.448 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 12:23:24.799 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 12:23:24.806 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 12:23:24.823 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 11.541 seconds (JVM running for 13.682)
26-12-2017 12:23:51.781 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 12:25:47.690 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 9636 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 12:25:47.725 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 12:25:47.874 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5dbea78f: startup date [Tue Dec 26 12:25:47 ART 2017]; root of context hierarchy
26-12-2017 12:25:47.939 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 12:25:51.213 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:25:51.721 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 12:25:51.726 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 12:25:51.727 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 12:25:51.739 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:25:51.740 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 12:25:51.741 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:25:51.746 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 12:25:51.754 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:25:51.756 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 12:25:51.757 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:25:51.854 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:25:51.862 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:25:52.578 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:25:52.665 [cluster-ClusterId{value='5a426a00180b0825a4f014df', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:107}] to localhost:27017
26-12-2017 12:25:52.678 [cluster-ClusterId{value='5a426a00180b0825a4f014df', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=965679}
26-12-2017 12:25:53.233 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:25:53.235 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:25:53.236 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 12:25:53.290 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:25:53.345 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5dbea78f: startup date [Tue Dec 26 12:25:47 ART 2017]; root of context hierarchy
26-12-2017 12:25:53.971 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:25:53.998 [cluster-ClusterId{value='5a426a01180b0825a4f014e0', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:108}] to localhost:27017
26-12-2017 12:25:53.999 [cluster-ClusterId{value='5a426a01180b0825a4f014e0', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=914363}
26-12-2017 12:25:54.190 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:109}] to localhost:27017
26-12-2017 12:25:54.261 [Thread-30] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:110}] to localhost:27017
26-12-2017 12:25:54.955 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 12:25:55.189 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 12:25:55.527 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 12:25:55.535 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 12:25:55.550 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.201 seconds (JVM running for 11.078)
26-12-2017 12:26:17.873 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 12:40:17.034 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 5360 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 12:40:17.054 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 12:40:17.300 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@24be81e2: startup date [Tue Dec 26 12:40:17 ART 2017]; root of context hierarchy
26-12-2017 12:40:17.311 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 12:40:20.937 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:40:21.439 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 12:40:21.442 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:40:21.443 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 12:40:21.455 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 12:40:21.456 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 12:40:21.457 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 12:40:21.462 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 12:40:21.470 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 12:40:21.471 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:40:21.472 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 12:40:21.592 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:40:21.599 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 12:40:22.388 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:40:22.512 [cluster-ClusterId{value='5a426d66180b0814f0e23e46', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:111}] to localhost:27017
26-12-2017 12:40:22.529 [cluster-ClusterId{value='5a426d66180b0814f0e23e46', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1093037}
26-12-2017 12:40:23.105 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:40:23.108 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 12:40:23.110 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 12:40:23.162 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 12:40:23.244 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@24be81e2: startup date [Tue Dec 26 12:40:17 ART 2017]; root of context hierarchy
26-12-2017 12:40:23.841 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 12:40:23.871 [cluster-ClusterId{value='5a426d67180b0814f0e23e47', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:112}] to localhost:27017
26-12-2017 12:40:23.872 [cluster-ClusterId{value='5a426d67180b0814f0e23e47', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1081374}
26-12-2017 12:40:24.052 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:113}] to localhost:27017
26-12-2017 12:40:24.122 [Thread-30] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:114}] to localhost:27017
26-12-2017 12:40:24.821 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 12:40:25.057 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 12:40:25.380 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 12:40:25.388 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 12:40:25.404 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 9.336 seconds (JVM running for 11.088)
26-12-2017 12:40:56.213 [reactor-http-nio-2] ERROR o.s.b.a.w.r.e.DefaultErrorWebExceptionHandler.logError - Failed to handle request [PUT http://localhost:9080/api/tweets/1/5a424149180b081e34930a51]
java.lang.NullPointerException: null
	at com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(TweetsController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:243)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:138)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1092)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:329)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoZip$ZipCoordinator.subscribe(MonoZip.java:180)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:126)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82)
	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoFlatMap] :
	reactor.core.publisher.Mono.flatMap(Mono.java:2059)
	org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:136)
	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.lambda$handle$1(RequestMappingHandlerAdapter.java:196)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:148)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1649)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1463)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1337)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:210)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.Mono.subscribe(Mono.java:3008)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:383)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:359)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
Error has been observed by the following operator(s):
	|_	Mono.flatMap(InvocableHandlerMethod.java:136)
	|_	Mono.defer(RequestMappingHandlerAdapter.java:196)
	|_	Mono.then(RequestMappingHandlerAdapter.java:196)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:197)
	|_	Mono.doOnNext(RequestMappingHandlerAdapter.java:198)
	|_	Mono.error(RequestMappingHandlerAdapter.java:228)
	|_	Mono.onErrorResume(RequestMappingHandlerAdapter.java:199)
	|_	Mono.flatMap(DispatcherHandler.java:160)
	|_	Mono.flatMap(DispatcherHandler.java:161)
	|_	Mono.defer(DefaultWebFilterChain.java:71)
	|_	Mono.doOnSuccess(MetricsWebFilter.java:59)
	|_	Mono.doOnError(MetricsWebFilter.java:60)
	|_	Mono.compose(MetricsWebFilter.java:54)
	|_	Mono.defer(DefaultWebFilterChain.java:71)

26-12-2017 13:37:54.204 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 10012 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 13:37:54.264 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 13:37:54.432 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 13:37:54 ART 2017]; root of context hierarchy
26-12-2017 13:37:54.445 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 13:37:57.478 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 13:37:57.900 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 13:37:57.903 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 13:37:57.904 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 13:37:57.916 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 13:37:57.917 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 13:37:57.918 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 13:37:57.921 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 13:37:57.929 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 13:37:57.930 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 13:37:57.931 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 13:37:58.003 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 13:37:58.011 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 13:37:58.563 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 13:37:58.628 [cluster-ClusterId{value='5a427ae6180b08271ca3f6dd', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:115}] to localhost:27017
26-12-2017 13:37:58.631 [cluster-ClusterId{value='5a427ae6180b08271ca3f6dd', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=807531}
26-12-2017 13:37:59.113 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 13:37:59.122 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 13:37:59.124 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 13:37:59.167 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 13:37:59.217 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@5934ba4b: startup date [Tue Dec 26 13:37:54 ART 2017]; root of context hierarchy
26-12-2017 13:37:59.569 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 13:37:59.756 [cluster-ClusterId{value='5a427ae7180b08271ca3f6de', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:116}] to localhost:27017
26-12-2017 13:37:59.758 [cluster-ClusterId{value='5a427ae7180b08271ca3f6de', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=1160215}
26-12-2017 13:37:59.950 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:117}] to localhost:27017
26-12-2017 13:38:00.037 [Thread-25] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:118}] to localhost:27017
26-12-2017 13:38:00.703 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 13:38:00.790 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 13:38:01.108 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 13:38:01.109 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 13:38:01.124 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.637 seconds (JVM running for 9.129)
26-12-2017 13:39:50.027 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarting - Starting DemoMongoDbApplication on CDA-AR-0572 with PID 3232 (C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB\target\classes started by gzago in C:\Users\gzago\Desktop\Proyectos\SpringInvestigacion\demoMongoDB)
26-12-2017 13:39:50.039 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
26-12-2017 13:39:50.165 [restartedMain] INFO  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext.prepareRefresh - Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@de65a32: startup date [Tue Dec 26 13:39:50 ART 2017]; root of context hierarchy
26-12-2017 13:39:50.186 [background-preinit] INFO  o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 6.0.5.Final
26-12-2017 13:39:53.168 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 13:39:53.565 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> com.example.mongo.demoMongoDB.Controller.TweetsController.deleteTweet(java.lang.String)
26-12-2017 13:39:53.566 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[GET]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.getTweetById(java.lang.String)
26-12-2017 13:39:53.567 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}/{idPersona}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.addLikeTweet(java.lang.String,java.lang.String)
26-12-2017 13:39:53.575 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Tweets>> com.example.mongo.demoMongoDB.Controller.TweetsController.editTweets(java.lang.String,com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 13:39:53.576 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[POST]}" onto public reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.saveTweets(com.example.mongo.demoMongoDB.Entities.Tweets)
26-12-2017 13:39:53.577 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/tweets],methods=[GET]}" onto public reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Tweets> com.example.mongo.demoMongoDB.Controller.TweetsController.getAlls()
26-12-2017 13:39:53.580 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[GET]}" onto reactor.core.publisher.Flux<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.findAll()
26-12-2017 13:39:53.588 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[GET]}" onto reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.findById(java.lang.String)
26-12-2017 13:39:53.589 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user],methods=[POST]}" onto reactor.core.publisher.Mono<com.example.mongo.demoMongoDB.Entities.Persona> com.example.mongo.demoMongoDB.Controller.UserController.registrar(com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 13:39:53.590 [restartedMain] INFO  o.s.w.r.r.m.a.RequestMappingHandlerMapping.register - Mapped "{[/api/user/{id}],methods=[PUT]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<com.example.mongo.demoMongoDB.Entities.Persona>> com.example.mongo.demoMongoDB.Controller.UserController.editUser(java.lang.String,com.example.mongo.demoMongoDB.Entities.Persona)
26-12-2017 13:39:53.661 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 13:39:53.668 [restartedMain] INFO  o.s.w.r.h.SimpleUrlHandlerMapping.registerHandler - Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
26-12-2017 13:39:54.218 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 13:39:54.283 [cluster-ClusterId{value='5a427b5a180b080ca06d856c', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:119}] to localhost:27017
26-12-2017 13:39:54.286 [cluster-ClusterId{value='5a427b5a180b080ca06d856c', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=791204}
26-12-2017 13:39:54.730 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 13:39:54.738 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
26-12-2017 13:39:54.739 [restartedMain] INFO  o.s.b.a.e.w.r.WebFluxEndpointHandlerMapping.register - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto private java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.http.server.reactive.ServerHttpRequest)
26-12-2017 13:39:54.778 [restartedMain] INFO  o.h.v.i.engine.ValidatorFactoryImpl.getTemporalValidationTolerance - HV000238: Temporal validation tolerance set to 0.
26-12-2017 13:39:54.826 [restartedMain] INFO  o.s.w.r.r.m.a.ControllerMethodResolver.initControllerAdviceCaches - Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@de65a32: startup date [Tue Dec 26 13:39:50 ART 2017]; root of context hierarchy
26-12-2017 13:39:55.127 [restartedMain] INFO  org.mongodb.driver.cluster.info - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
26-12-2017 13:39:55.306 [cluster-ClusterId{value='5a427b5b180b080ca06d856d', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:120}] to localhost:27017
26-12-2017 13:39:55.307 [cluster-ClusterId{value='5a427b5b180b080ca06d856d', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 0]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=762280}
26-12-2017 13:39:55.445 [restartedMain] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:121}] to localhost:27017
26-12-2017 13:39:55.498 [Thread-26] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:4, serverValue:122}] to localhost:27017
26-12-2017 13:39:56.049 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
26-12-2017 13:39:56.140 [restartedMain] INFO  o.s.j.e.a.AnnotationMBeanExporter.afterSingletonsInstantiated - Registering beans for JMX exposure on startup
26-12-2017 13:39:56.439 [reactor-http-nio-1] INFO  r.ipc.netty.tcp.BlockingNettyContext.info - Started HttpServer on /0:0:0:0:0:0:0:0:9080
26-12-2017 13:39:56.440 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer.start - Netty started on port(s): 9080
26-12-2017 13:39:56.446 [restartedMain] INFO  c.e.m.d.DemoMongoDbApplication.logStarted - Started DemoMongoDbApplication in 7.274 seconds (JVM running for 8.752)
